{"version":3,"sources":["components/images/logo.png","components/homePage/HomePage.js","components/toaster.js","components/register/Register.js","components/useChat.js","components/Home/Home.jsx","components/signIn/SignIn.js","components/notFound/NotFound.js","components/UserAvatar/UserAvatar.js","components/ChatMessage/ChatMessage.js","components/useTyping.js","components/NewMessageForm/NewMessageForm.js","components/TypingAnimation/TypingAnimation.js","components/TypingMessage/TypingMessage.js","components/Users/Users.js","components/chatPage/ChatPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomePage","props","className","src","logo","alt","to","exact","type","value","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","makeToast","msg","fire","icon","title","Register","handleChange","event","setState","target","handleSignUp","preventDefault","state","email","password","name","surname","test","length","body","fetch","method","headers","JSON","stringify","then","res","json","response","error","console","log","message","history","push","catch","alert","onSubmit","this","placeholder","required","onChange","id","htmlFor","aria-hidden","React","Component","NEW_CHAT_MESSAGE_EVENT","START_TYPING_MESSAGE_EVENT","STOP_TYPING_MESSAGE_EVENT","SOCKET_SERVER_URL","useChat","roomId","useState","messages","setMessages","users","setUsers","typingUsers","setTypingUsers","user","setUser","socketRef","useRef","useEffect","a","axios","get","result","data","picture","fetchUser","fetchUsers","fetchMessages","current","socketIOClient","query","on","filter","u","incomingMessage","ownedByCurrentUser","senderId","typingInfo","disconnect","sendMessage","messageBody","emit","startTypingMessage","stopTypingMessage","Home","roomName","setRoomName","setChatrooms","Authorization","localStorage","getItem","err","emailQuery","SignIn","handleSignIn","Error","token","setItem","bool","href","NotFound","UserAvatar","ChatMessage","useTyping","isTyping","setIsTyping","isKeyPressed","setIsKeyPressed","countdown","setCountdown","interval","clearInterval","setInterval","c","startTyping","stopTyping","cancelTyping","NewMessageForm","newMessage","handleNewMessageChange","handleStartTyping","handleStopTyping","handleSendMessage","onKeyPress","onKeyUp","onClick","TypingAnimation","TypingMessage","Users","map","index","ChatRoom","match","params","setNewMessage","i","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92b1afaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8b1d0e4d.png\";","import React from 'react'\r\nimport './HomePage.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../images/logo.png';\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n    \r\n\r\n    \r\n        return (\r\n            <div className='background'>\r\n                <main>\r\n                    <img src={logo} alt=\"Logo\" />\r\n                    <div className='btnWrapper'>\r\n                        <Link to='/register'\r\n                            exact ='true'\r\n                            className='register'>\r\n                            <input type=\"submit\" value=\"Register\" />\r\n\r\n                        </Link>\r\n                        <Link to='/sign-in'\r\n                            exact ='true'\r\n                            className='signin'>\r\n                            <input type=\"submit\" value=\"Sign in\" />\r\n                        </Link>\r\n\r\n\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    \r\n\r\n}\r\n\r\nexport default HomePage","import Swal from \"sweetalert2\";\r\n\r\nconst Toast = Swal.mixin({\r\n  toast: true,\r\n  position: \"top-end\",\r\n  showConfirmButton: false,\r\n  timer: 3000,\r\n  timerProgressBar: true,\r\n  onOpen: (toast) => {\r\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n  },\r\n});\r\n\r\nconst makeToast = (type, msg) => {\r\n  Toast.fire({\r\n    icon: type,\r\n    title: msg,\r\n  });\r\n};\r\n\r\nexport default makeToast;","import React from 'react'\r\nimport '../signIn/SignIn.scss'\r\nimport makeToast from \"../toaster\";\r\n\r\n\r\n\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n            surname: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (event, type) => {\r\n        this.setState({\r\n            [type]: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleSignUp = (event) => {\r\n        event.preventDefault()\r\n        let regexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let { email, password, name, surname } = this.state\r\n\r\n        if (regexp.test(email) && password.length > 4) {\r\n            let body =\r\n            {\r\n                email,\r\n                password,\r\n                name,\r\n                surname\r\n            }\r\n            fetch('http://localhost:8080/user/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n                .then((res) => res.json())\r\n                .then((response) => {\r\n                    if (response.error) {\r\n                        throw response.error\r\n                    }\r\n                    if (response.error) {\r\n                        console.log(response.error.message, '----response.mes');\r\n                    }\r\n                    else {\r\n\r\n                        console.log(\"Successfull registration\");\r\n                        makeToast(\"success\", response.message);\r\n                        this.props.history.push('/home')\r\n\r\n                    }\r\n                   \r\n\r\n                })\r\n                .catch((error) => {\r\n                    // makeToast(\"error\", error.response.message);\r\n                    console.log(error);\r\n                })\r\n\r\n        } else {\r\n            alert('password must be gt 5')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='background'>\r\n\r\n                <form\r\n                    onSubmit={this.handleSignUp} >\r\n                    <div>\r\n                        <label className=\"label-email\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"Name\"\r\n                                placeholder=\"Name\"\r\n                                required\r\n                                value={this.state.name}\r\n                                onChange={(event) => this.handleChange(event, 'name')} />\r\n                            <span className=\"required\">Name</span>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"label-email\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"Surname\"\r\n                                placeholder=\"Surname\"\r\n                                required\r\n                                value={this.state.surname}\r\n                                onChange={(event) => this.handleChange(event, 'surname')} />\r\n                            <span className=\"required\">Surname</span>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"label-email\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"text\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                required\r\n                                value={this.state.email}\r\n                                onChange={(event) => this.handleChange(event, 'email')} />\r\n                            <span className=\"required\">Email</span>\r\n                        </label>\r\n                    </div>\r\n                    <input type=\"checkbox\" name=\"show-password\" className=\"show-password a11y-hidden\" id=\"show-password\"\r\n                    />\r\n                    <label className=\"label-show-password\" htmlFor=\"show-password\">\r\n                        <span>Show Password</span>\r\n                    </label>\r\n                    <div>\r\n                        <label className=\"label-password\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"text\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                                value={this.state.password}\r\n                                onChange={(event) => this.handleChange(event, 'password')} />\r\n                            <span className=\"required\">Password</span>\r\n                        </label>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Sign up\" />\r\n                    <figure aria-hidden=\"true\">\r\n                        <div className=\"person-body\"></div>\r\n                        <div className=\"neck skin\"></div>\r\n                        <div className=\"head skin\">\r\n                            <div className=\"eyes\"></div>\r\n                            <div className=\"mouth\"></div>\r\n                        </div>\r\n                        <div className=\"hair\"></div>\r\n                        <div className=\"ears\"></div>\r\n                        <div className=\"shirt-1\"></div>\r\n                        <div className=\"shirt-2\"></div>\r\n                    </figure>\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Register","import { useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nconst USER_JOIN_CHAT_EVENT = \"USER_JOIN_CHAT_EVENT\";\r\nconst USER_LEAVE_CHAT_EVENT = \"USER_LEAVE_CHAT_EVENT\";\r\nconst NEW_CHAT_MESSAGE_EVENT = \"NEW_CHAT_MESSAGE_EVENT\";\r\nconst START_TYPING_MESSAGE_EVENT = \"START_TYPING_MESSAGE_EVENT\";\r\nconst STOP_TYPING_MESSAGE_EVENT = \"STOP_TYPING_MESSAGE_EVENT\";\r\nconst SOCKET_SERVER_URL = \"http://localhost:8080\";\r\n\r\nconst useChat = (roomId, email) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [user, setUser] = useState();\r\n  const socketRef = useRef();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      // const response = await axios.get(\"https://api.randomuser.me/\");\r\n      const response = await axios.get(`${SOCKET_SERVER_URL}/user/:${email}`);\r\n      // const result = response.data.results[0];\r\n      const result = response.data\r\n      console.log(result);\r\n      setUser({\r\n        picture: result.picture,\r\n        name: result.name\r\n        // name: result.name.first,\r\n        // picture: result.picture.thumbnail,\r\n      });\r\n    };\r\n\r\n    fetchUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const response = await axios.get(\r\n        `${SOCKET_SERVER_URL}/rooms/${roomId}/users`\r\n      );\r\n      const result = response.data.users;\r\n      setUsers(result);\r\n    };\r\n\r\n    fetchUsers();\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      const response = await axios.get(\r\n        `${SOCKET_SERVER_URL}/rooms/${roomId}/messages`\r\n      );\r\n      const result = response.data.messages;\r\n      setMessages(result);\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n      query: { roomId, name: user.name, picture: user.picture },\r\n    });\r\n\r\n    socketRef.current.on(\"connect\", () => {\r\n      console.log(socketRef.current.id);\r\n    });\r\n\r\n    socketRef.current.on(USER_JOIN_CHAT_EVENT, (user) => {\r\n      console.log('user',user);\r\n      console.log('socketRef.current',socketRef.current);\r\n\r\n      if (user.id === socketRef.current.id) return;\r\n      setUsers((users) => [...users, user]);\r\n    });\r\n\r\n    socketRef.current.on(USER_LEAVE_CHAT_EVENT, (user) => {\r\n      setUsers((users) => users.filter((u) => u.id !== user.id));\r\n    });\r\n\r\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n      console.log('message',message);\r\n      const incomingMessage = {\r\n        ...message,\r\n        ownedByCurrentUser: message.senderId === socketRef.current.id,\r\n      };\r\n      console.log(incomingMessage,'incomingMessage');\r\n      setMessages((messages) => [...messages, incomingMessage]);\r\n      console.log('messages',messages);\r\n    });\r\n\r\n    socketRef.current.on(START_TYPING_MESSAGE_EVENT, (typingInfo) => {\r\n      if (typingInfo.senderId !== socketRef.current.id) {\r\n        const user = typingInfo.user;\r\n        setTypingUsers((users) => [...users, user]);\r\n      }\r\n    });\r\n\r\n    socketRef.current.on(STOP_TYPING_MESSAGE_EVENT, (typingInfo) => {\r\n      if (typingInfo.senderId !== socketRef.current.id) {\r\n        const user = typingInfo.user;\r\n        setTypingUsers((users) => users.filter((u) => u.name !== user.name));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [roomId, user]);\r\n\r\n  const sendMessage = (messageBody) => {\r\n    if (!socketRef.current) return;\r\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n      body: messageBody,\r\n      senderId: socketRef.current.id,\r\n      user: user,\r\n    });\r\n  };\r\n\r\n  const startTypingMessage = () => {\r\n    if (!socketRef.current) return;\r\n    socketRef.current.emit(START_TYPING_MESSAGE_EVENT, {\r\n      senderId: socketRef.current.id,\r\n      user,\r\n    });\r\n  };\r\n\r\n  const stopTypingMessage = () => {\r\n    if (!socketRef.current) return;\r\n    socketRef.current.emit(STOP_TYPING_MESSAGE_EVENT, {\r\n      senderId: socketRef.current.id,\r\n      user,\r\n    });\r\n  };\r\n\r\n  return {\r\n    messages,\r\n    user,\r\n    users,\r\n    typingUsers,\r\n    sendMessage,\r\n    startTypingMessage,\r\n    stopTypingMessage,\r\n  };\r\n};\r\n\r\nexport default useChat;\r\n","import React, { useState } from \"react\";\r\nimport { Link , Redirect} from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nimport \"./Home.css\";\r\n\r\nconst Home = (props) => {\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [chatrooms, setChatrooms] = useState([]);\r\n\r\n  const getChatrooms = () => {\r\n    axios\r\n      .get(\"http://localhost:8080/chatroom\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setChatrooms(response.data);\r\n        console.log(response.data);\r\n        \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getChatrooms();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n \r\n  \r\n\r\n  const handleRoomNameChange = (event) => {\r\n    setRoomName(event.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Room\"\r\n        value={roomName}\r\n        onChange={handleRoomNameChange}\r\n        className=\"text-input-field\"\r\n      />\r\n      <Link to={`/home/${roomName}/${props.emailQuery}`} className=\"enter-room-button\">\r\n        Join room\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react'\r\nimport './SignIn.scss'\r\nimport makeToast from \"../toaster\";\r\nimport useChat from \"../useChat\";\r\nimport Home from '../Home/Home';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            emailQuery:'',\r\n            bool:true\r\n        }\r\n    }\r\n\r\n    handleChange = (event, type) => {\r\n        this.setState({\r\n            [type]: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleSignIn = (event) => {\r\n        event.preventDefault()\r\n        let r = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        if (r.test(this.state.email)) {\r\n            let body =\r\n                {\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                }\r\n            fetch('http://localhost:8080/user/sign-in', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n                .then((res) => res.json())\r\n                .then((response) => {\r\n\r\n                    if(response.error){\r\n                        throw Error()\r\n                    }\r\n                    else{\r\n                        if (!response.token) {\r\n                          return  makeToast(\"error\", response.message);\r\n    \r\n                        }\r\n                        \r\n                         makeToast(\"success\", response.message);\r\n                        localStorage.setItem('token', response.token)\r\n                        this.setState({\r\n                            emailQuery:body.email,\r\n                            bool:false\r\n                        })\r\n                        console.log(\"Login successfull\");\r\n                        // this.props.history.push('/home')\r\n                        \r\n                       \r\n                        console.log(response.message, 'response.mes');\r\n    \r\n                    \r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    // makeToast(\"error\", error.response.message);\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.state.bool?(\r\n                <div className='background'>\r\n                \r\n                <form\r\n                    className=\"login-form\"\r\n                    onSubmit={this.handleSignIn}>\r\n                    <h1 className=\"a11y-hidden\">Login Form</h1>\r\n                    <div>\r\n                        <label className=\"label-email\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"text\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                required\r\n                                value={this.state.email}\r\n                                onChange={(event) => this.handleChange(event, 'email')}\r\n                            />\r\n                            <span className=\"required\">Email</span>\r\n                        </label>\r\n                    </div>\r\n                    <input type=\"checkbox\" name=\"show-password\" className=\"show-password a11y-hidden\" id=\"show-password\" />\r\n                    <label className=\"label-show-password\" htmlFor=\"show-password\">\r\n                        <span>Show Password</span>\r\n                    </label>\r\n                    <div>\r\n                        <label className=\"label-password\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"text\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                                value={this.state.password}\r\n                                onChange={(event) => this.handleChange(event, 'password')}\r\n                            />\r\n                            <span className=\"required\">Password</span>\r\n                        </label>\r\n                    </div>\r\n                        <input\r\n                        type=\"submit\"\r\n                        value=\"Log In\"\r\n                    />\r\n                    \r\n                             \r\n\r\n                   \r\n                    <div className=\"email\">\r\n                        <a href=\"#\">Forgot password?</a>\r\n                    </div>\r\n                    <figure aria-hidden=\"true\">\r\n                        <div className=\"person-body\"></div>\r\n                        <div className=\"neck skin\"></div>\r\n                        <div className=\"head skin\">\r\n                            <div className=\"eyes\"></div>\r\n                            <div className=\"mouth\"></div>\r\n                        </div>\r\n                        <div className=\"hair\"></div>\r\n                        <div className=\"ears\"></div>\r\n                        <div className=\"shirt-1\"></div>\r\n                        <div className=\"shirt-2\"></div>\r\n                    </figure>\r\n                </form>\r\n                \r\n            </div>\r\n            ):\r\n            <Home emailQuery={this.state.emailQuery} />\r\n        }\r\n            </>\r\n            \r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SignIn","import React from 'react'\r\n\r\n\r\n\r\nclass NotFound extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Error 404</h1>\r\n                <h2>Page not found 😖</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NotFound","import React from \"react\";\r\nimport \"./UserAvatar.css\";\r\n\r\nconst UserAvatar = ({ user }) => {\r\n  return (\r\n    <>\r\n      <img\r\n        src={user.picture}\r\n        alt={user.name}\r\n        title={user.name}\r\n        className={\"avatar\"}\r\n      ></img>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserAvatar;\r\n","import React from \"react\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\nimport \"./ChatMessage.css\";\r\n\r\nconst ChatMessage = ({ message }) => {\r\n  return (\r\n    <div\r\n      className={`message-item ${\r\n        message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\r\n      }`}\r\n    >\r\n      {!message.ownedByCurrentUser && (\r\n        <div className=\"message-avatar-container\">\r\n          <UserAvatar user={message.user}></UserAvatar>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"message-body-container\">\r\n        {!message.ownedByCurrentUser && (\r\n          <div className=\"message-user-name\">{message.user.name}</div>\r\n        )}\r\n        <div className=\"message-body\">{message.body}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useTyping = () => {\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [isKeyPressed, setIsKeyPressed] = useState(false);\r\n  const [countdown, setCountdown] = useState(5);\r\n\r\n  const startTyping = () => {\r\n    setIsKeyPressed(true);\r\n    setCountdown(5);\r\n    setIsTyping(true);\r\n  };\r\n\r\n  const stopTyping = () => {\r\n    setIsKeyPressed(false);\r\n  };\r\n\r\n  const cancelTyping = () => {\r\n    setCountdown(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (!isKeyPressed) {\r\n      interval = setInterval(() => {\r\n        setCountdown((c) => c - 1);\r\n      }, 1000);\r\n    } else if (isKeyPressed || countdown === 0) {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    if (countdown === 0) {\r\n      setIsTyping(false);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isKeyPressed, countdown]);\r\n\r\n  return { isTyping, startTyping, stopTyping, cancelTyping };\r\n};\r\n\r\nexport default useTyping;\r\n","import React from \"react\";\r\nimport \"./NewMessageForm.css\";\r\n\r\nconst NewMessageForm = ({\r\n  newMessage,\r\n  handleNewMessageChange,\r\n  handleStartTyping,\r\n  handleStopTyping,\r\n  handleSendMessage,\r\n}) => {\r\n  return (\r\n    <form className=\"new-message-form\">\r\n      <input\r\n        type=\"text\"\r\n        value={newMessage}\r\n        onChange={handleNewMessageChange}\r\n        placeholder=\"Aa\"\r\n        className=\"new-message-input-field\"\r\n        onKeyPress={handleStartTyping}\r\n        onKeyUp={handleStopTyping}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        onClick={handleSendMessage}\r\n        className=\"send-message-button\"\r\n      >\r\n        Send\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewMessageForm;\r\n","import React from \"react\";\r\nimport \"./TypingAnimation.css\";\r\n\r\nconst TypingAnimation = () => {\r\n  return (\r\n    <div className=\"dotsContainer\">\r\n      <span id=\"dot1\"></span>\r\n      <span id=\"dot2\"></span>\r\n      <span id=\"dot3\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingAnimation;\r\n","import React from \"react\";\r\nimport TypingAnimation from \"../TypingAnimation/TypingAnimation\";\r\n\r\nimport \"./TypingMessage.css\";\r\n\r\nconst TypingMessage = ({ user }) => {\r\n  return (\r\n    <div className=\"message-item\">\r\n      <div className=\"message-avatar-container\">\r\n        <img\r\n          src={user.picture}\r\n          alt={user.name}\r\n          className={\"message-avatar\"}\r\n        ></img>\r\n      </div>\r\n\r\n      <TypingAnimation></TypingAnimation>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingMessage;\r\n","import React from \"react\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\nimport \"./Users.css\";\r\n\r\nconst Users = ({ users }) => {\r\n  return users.length > 0 ? (\r\n    <div>\r\n      <h2>Also in this room:</h2>\r\n      <ul className=\"user-list\">\r\n        {users.map((user, index) => (\r\n          <li key={index} className=\"user-box\">\r\n            <span>{user.name}</span>\r\n            <UserAvatar user={user}></UserAvatar>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    <div>There is no one else in this room</div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./ChatPage.css\";\r\nimport useChat from \"../useChat\";\r\nimport ChatMessage from \"../ChatMessage/ChatMessage\";\r\nimport useTyping from \"../useTyping\";\r\nimport NewMessageForm from \"../NewMessageForm/NewMessageForm\";\r\nimport TypingMessage from \"../TypingMessage/TypingMessage\";\r\nimport Users from \"../Users/Users\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\nconst ChatRoom = (props) => {\r\n  const { roomId, email } = props.match.params;\r\n  const {\r\n    messages,\r\n    user,\r\n    users,\r\n    typingUsers,\r\n    sendMessage,\r\n    startTypingMessage,\r\n    stopTypingMessage,\r\n  } = useChat(roomId, email);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  const { isTyping, startTyping, stopTyping, cancelTyping } = useTyping();\r\n\r\n  const handleNewMessageChange = (event) => {\r\n    setNewMessage(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = (event) => {\r\n    event.preventDefault();\r\n    cancelTyping();\r\n    sendMessage(newMessage);\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTyping) startTypingMessage();\r\n    else stopTypingMessage();\r\n  }, [isTyping]);\r\n\r\n  return (\r\n    <div className=\"chat-room-container\">\r\n      <div className=\"chat-room-top-bar\">\r\n        <h1 className=\"room-name\">Room: {roomId}</h1>\r\n        {user && <UserAvatar user={user}></UserAvatar>}\r\n      </div>\r\n      <Users users={users}></Users>\r\n      <div className=\"messages-container\">\r\n        <ol className=\"messages-list\">\r\n          {messages.map((message, i) => (\r\n            <li key={i}>\r\n              <ChatMessage message={message}></ChatMessage>\r\n            </li>\r\n          ))}\r\n          {typingUsers.map((user, i) => (\r\n            <li key={messages.length + i}>\r\n              <TypingMessage user={user}></TypingMessage>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <NewMessageForm\r\n        newMessage={newMessage}\r\n        handleNewMessageChange={handleNewMessageChange}\r\n        handleStartTyping={startTyping}\r\n        handleStopTyping={stopTyping}\r\n        handleSendMessage={handleSendMessage}\r\n      ></NewMessageForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","\nimport './App.css';\nimport HomePage from './components/homePage/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport Register from './components/register/Register'\nimport SignIn from './components/signIn/SignIn'\nimport NotFound from './components/notFound/NotFound'\nimport DashboardPage from './components/dashboard/Dashboard';\nimport Home from './components/Home/Home';\nimport React from 'react'\nimport ChatRoom from './components/chatPage/ChatPage';\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/' exact component={HomePage} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/home/:roomId/:email\" component={ChatRoom} />\n\n\n        <Route path='/register' exact component={Register} />\n        <Route path='/sign-in' exact component={SignIn}/>\n        {/* <Route path='/logged/:id'exact component={ChatPage} /> */}\n        {/* <Route path='/dashboard' exact component={DashboardPage} /> */}\n        \n        <Route path='/404' exact component={NotFound} />\n        <Redirect to='/404' />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport io  from 'socket.io-client'\n\n\nReactDOM.render(\n  <BrowserRouter  basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}