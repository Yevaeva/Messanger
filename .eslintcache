[{"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\index.js":"1","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\reportWebVitals.js":"2","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\App.js":"3","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\homePage\\HomePage.js":"4","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\register\\Register.js":"5","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\notFound\\NotFound.js":"6","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\signIn\\SignIn.js":"7","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\chatPage\\ChatPage.jsx":"8","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\dashboard\\Dashboard.js":"9","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\toaster.js":"10","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\Home\\Home.jsx":"11","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\useChat.js":"12","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\useTyping.js":"13","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\ChatMessage\\ChatMessage.js":"14","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\UserAvatar\\UserAvatar.js":"15","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\TypingMessage\\TypingMessage.js":"16","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\NewMessageForm\\NewMessageForm.js":"17","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\Users\\Users.js":"18","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\TypingAnimation\\TypingAnimation.js":"19"},{"size":712,"mtime":1612213460687,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1154,"mtime":1612437388207,"results":"23","hashOfConfig":"21"},{"size":978,"mtime":1612399056351,"results":"24","hashOfConfig":"21"},{"size":5836,"mtime":1612399146505,"results":"25","hashOfConfig":"21"},{"size":282,"mtime":1611786538707,"results":"26","hashOfConfig":"21"},{"size":5591,"mtime":1612473581817,"results":"27","hashOfConfig":"21"},{"size":2201,"mtime":1612437404931,"results":"28","hashOfConfig":"21"},{"size":1625,"mtime":1612477442888,"results":"29","hashOfConfig":"21"},{"size":456,"mtime":1612361824816,"results":"30","hashOfConfig":"21"},{"size":1262,"mtime":1612515286054,"results":"31","hashOfConfig":"21"},{"size":4388,"mtime":1612528459305,"results":"32","hashOfConfig":"21"},{"size":970,"mtime":1612351731427,"results":"33","hashOfConfig":"21"},{"size":780,"mtime":1612351731395,"results":"34","hashOfConfig":"21"},{"size":300,"mtime":1612351731415,"results":"35","hashOfConfig":"21"},{"size":509,"mtime":1612351731412,"results":"36","hashOfConfig":"21"},{"size":734,"mtime":1612351731406,"results":"37","hashOfConfig":"21"},{"size":576,"mtime":1612351731419,"results":"38","hashOfConfig":"21"},{"size":295,"mtime":1612351731408,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"19vtcm9",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\index.js",["84"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport io  from 'socket.io-client'\n\n\nReactDOM.render(\n  <BrowserRouter  basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["85","86"],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\reportWebVitals.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\App.js",["87"],"\nimport './App.css';\nimport HomePage from './components/homePage/HomePage';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport Register from './components/register/Register'\nimport SignIn from './components/signIn/SignIn'\nimport NotFound from './components/notFound/NotFound'\nimport DashboardPage from './components/dashboard/Dashboard';\nimport Home from './components/Home/Home';\nimport React from 'react'\nimport ChatRoom from './components/chatPage/ChatPage';\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/' exact component={HomePage} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/home/:roomId/:email\" component={ChatRoom} />\n\n\n        <Route path='/register' exact component={Register} />\n        <Route path='/sign-in' exact component={SignIn}/>\n        {/* <Route path='/logged/:id'exact component={ChatPage} /> */}\n        {/* <Route path='/dashboard' exact component={DashboardPage} /> */}\n        \n        <Route path='/404' exact component={NotFound} />\n        <Redirect to='/404' />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\homePage\\HomePage.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\register\\Register.js",["88","89"],"import React from 'react'\r\nimport '../signIn/SignIn.scss'\r\nimport makeToast from \"../toaster\";\r\n\r\n\r\n\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n            surname: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (event, type) => {\r\n        this.setState({\r\n            [type]: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleSignUp = (event) => {\r\n        event.preventDefault()\r\n        let regexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let { email, password, name, surname } = this.state\r\n\r\n        if (regexp.test(email) && password.length > 4) {\r\n            let body =\r\n            {\r\n                email,\r\n                password,\r\n                name,\r\n                surname\r\n            }\r\n            fetch('http://localhost:8080/user/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n                .then((res) => res.json())\r\n                .then((response) => {\r\n                    if (response.error) {\r\n                        throw response.error\r\n                    }\r\n                    if (response.error) {\r\n                        console.log(response.error.message, '----response.mes');\r\n                    }\r\n                    else {\r\n\r\n                        console.log(\"Successfull registration\");\r\n                        makeToast(\"success\", response.message);\r\n                        this.props.history.push('/home')\r\n\r\n                    }\r\n                   \r\n\r\n                })\r\n                .catch((error) => {\r\n                    // makeToast(\"error\", error.response.message);\r\n                    console.log(error);\r\n                })\r\n\r\n        } else {\r\n            alert('password must be gt 5')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='background'>\r\n\r\n                <form\r\n                    onSubmit={this.handleSignUp} >\r\n                    <div>\r\n                        <label className=\"label-email\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"Name\"\r\n                                placeholder=\"Name\"\r\n                                required\r\n                                value={this.state.name}\r\n                                onChange={(event) => this.handleChange(event, 'name')} />\r\n                            <span className=\"required\">Name</span>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"label-email\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"Surname\"\r\n                                placeholder=\"Surname\"\r\n                                required\r\n                                value={this.state.surname}\r\n                                onChange={(event) => this.handleChange(event, 'surname')} />\r\n                            <span className=\"required\">Surname</span>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"label-email\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"text\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                required\r\n                                value={this.state.email}\r\n                                onChange={(event) => this.handleChange(event, 'email')} />\r\n                            <span className=\"required\">Email</span>\r\n                        </label>\r\n                    </div>\r\n                    <input type=\"checkbox\" name=\"show-password\" className=\"show-password a11y-hidden\" id=\"show-password\"\r\n                    />\r\n                    <label className=\"label-show-password\" htmlFor=\"show-password\">\r\n                        <span>Show Password</span>\r\n                    </label>\r\n                    <div>\r\n                        <label className=\"label-password\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"text\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                                value={this.state.password}\r\n                                onChange={(event) => this.handleChange(event, 'password')} />\r\n                            <span className=\"required\">Password</span>\r\n                        </label>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Sign up\" />\r\n                    <figure aria-hidden=\"true\">\r\n                        <div className=\"person-body\"></div>\r\n                        <div className=\"neck skin\"></div>\r\n                        <div className=\"head skin\">\r\n                            <div className=\"eyes\"></div>\r\n                            <div className=\"mouth\"></div>\r\n                        </div>\r\n                        <div className=\"hair\"></div>\r\n                        <div className=\"ears\"></div>\r\n                        <div className=\"shirt-1\"></div>\r\n                        <div className=\"shirt-2\"></div>\r\n                    </figure>\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Register","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\notFound\\NotFound.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\signIn\\SignIn.js",["90","91","92","93"],"import React from 'react'\r\nimport './SignIn.scss'\r\nimport makeToast from \"../toaster\";\r\nimport useChat from \"../useChat\";\r\nimport Home from '../Home/Home';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            emailQuery:'',\r\n            bool:true\r\n        }\r\n    }\r\n\r\n    handleChange = (event, type) => {\r\n        this.setState({\r\n            [type]: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleSignIn = (event) => {\r\n        event.preventDefault()\r\n        let r = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        if (r.test(this.state.email)) {\r\n            let body =\r\n                {\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                }\r\n            fetch('http://localhost:8080/user/sign-in', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n                .then((res) => res.json())\r\n                .then((response) => {\r\n\r\n                    if(response.error){\r\n                        throw Error()\r\n                    }\r\n                    else{\r\n                        if (!response.token) {\r\n                          return  makeToast(\"error\", response.message);\r\n    \r\n                        }\r\n                        \r\n                         makeToast(\"success\", response.message);\r\n                        localStorage.setItem('token', response.token)\r\n                        this.setState({\r\n                            emailQuery:body.email,\r\n                            bool:false\r\n                        })\r\n                        console.log(\"Login successfull\");\r\n                        // this.props.history.push('/home')\r\n                        \r\n                       \r\n                        console.log(response.message, 'response.mes');\r\n    \r\n                    \r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    // makeToast(\"error\", error.response.message);\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.state.bool?(\r\n                <div className='background'>\r\n                \r\n                <form\r\n                    className=\"login-form\"\r\n                    onSubmit={this.handleSignIn}>\r\n                    <h1 className=\"a11y-hidden\">Login Form</h1>\r\n                    <div>\r\n                        <label className=\"label-email\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"text\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                required\r\n                                value={this.state.email}\r\n                                onChange={(event) => this.handleChange(event, 'email')}\r\n                            />\r\n                            <span className=\"required\">Email</span>\r\n                        </label>\r\n                    </div>\r\n                    <input type=\"checkbox\" name=\"show-password\" className=\"show-password a11y-hidden\" id=\"show-password\" />\r\n                    <label className=\"label-show-password\" htmlFor=\"show-password\">\r\n                        <span>Show Password</span>\r\n                    </label>\r\n                    <div>\r\n                        <label className=\"label-password\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"text\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                                value={this.state.password}\r\n                                onChange={(event) => this.handleChange(event, 'password')}\r\n                            />\r\n                            <span className=\"required\">Password</span>\r\n                        </label>\r\n                    </div>\r\n                        <input\r\n                        type=\"submit\"\r\n                        value=\"Log In\"\r\n                    />\r\n                    \r\n                             \r\n\r\n                   \r\n                    <div className=\"email\">\r\n                        <a href=\"#\">Forgot password?</a>\r\n                    </div>\r\n                    <figure aria-hidden=\"true\">\r\n                        <div className=\"person-body\"></div>\r\n                        <div className=\"neck skin\"></div>\r\n                        <div className=\"head skin\">\r\n                            <div className=\"eyes\"></div>\r\n                            <div className=\"mouth\"></div>\r\n                        </div>\r\n                        <div className=\"hair\"></div>\r\n                        <div className=\"ears\"></div>\r\n                        <div className=\"shirt-1\"></div>\r\n                        <div className=\"shirt-2\"></div>\r\n                    </figure>\r\n                </form>\r\n                \r\n            </div>\r\n            ):\r\n            <Home emailQuery={this.state.emailQuery} />\r\n        }\r\n            </>\r\n            \r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SignIn","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\chatPage\\ChatPage.jsx",["94"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./ChatPage.css\";\r\nimport useChat from \"../useChat\";\r\nimport ChatMessage from \"../ChatMessage/ChatMessage\";\r\nimport useTyping from \"../useTyping\";\r\nimport NewMessageForm from \"../NewMessageForm/NewMessageForm\";\r\nimport TypingMessage from \"../TypingMessage/TypingMessage\";\r\nimport Users from \"../Users/Users\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\nconst ChatRoom = (props) => {\r\n  const { roomId, email } = props.match.params;\r\n  const {\r\n    messages,\r\n    user,\r\n    users,\r\n    typingUsers,\r\n    sendMessage,\r\n    startTypingMessage,\r\n    stopTypingMessage,\r\n  } = useChat(roomId, email);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  const { isTyping, startTyping, stopTyping, cancelTyping } = useTyping();\r\n\r\n  const handleNewMessageChange = (event) => {\r\n    setNewMessage(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = (event) => {\r\n    event.preventDefault();\r\n    cancelTyping();\r\n    sendMessage(newMessage);\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTyping) startTypingMessage();\r\n    else stopTypingMessage();\r\n  }, [isTyping]);\r\n\r\n  return (\r\n    <div className=\"chat-room-container\">\r\n      <div className=\"chat-room-top-bar\">\r\n        <h1 className=\"room-name\">Room: {roomId}</h1>\r\n        {user && <UserAvatar user={user}></UserAvatar>}\r\n      </div>\r\n      <Users users={users}></Users>\r\n      <div className=\"messages-container\">\r\n        <ol className=\"messages-list\">\r\n          {messages.map((message, i) => (\r\n            <li key={i}>\r\n              <ChatMessage message={message}></ChatMessage>\r\n            </li>\r\n          ))}\r\n          {typingUsers.map((user, i) => (\r\n            <li key={messages.length + i}>\r\n              <TypingMessage user={user}></TypingMessage>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <NewMessageForm\r\n        newMessage={newMessage}\r\n        handleNewMessageChange={handleNewMessageChange}\r\n        handleStartTyping={startTyping}\r\n        handleStopTyping={stopTyping}\r\n        handleSendMessage={handleSendMessage}\r\n      ></NewMessageForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\toaster.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\Home\\Home.jsx",["95","96"],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\useChat.js",["97","98"],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\useTyping.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\ChatMessage\\ChatMessage.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\TypingMessage\\TypingMessage.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\NewMessageForm\\NewMessageForm.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\Users\\Users.js",[],"C:\\Users\\Acer\\OneDrive\\Рабочий стол\\messanger\\src\\components\\TypingAnimation\\TypingAnimation.js",[],{"ruleId":"99","severity":1,"message":"100","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":10},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"99","severity":1,"message":"107","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":29,"column":32,"nodeType":"110","messageId":"111","endLine":29,"endColumn":33,"suggestions":"112"},{"ruleId":"108","severity":1,"message":"109","line":29,"column":57,"nodeType":"110","messageId":"111","endLine":29,"endColumn":58,"suggestions":"113"},{"ruleId":"99","severity":1,"message":"114","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":15},{"ruleId":"108","severity":1,"message":"109","line":33,"column":27,"nodeType":"110","messageId":"111","endLine":33,"endColumn":28,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"109","line":33,"column":52,"nodeType":"110","messageId":"111","endLine":33,"endColumn":53,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":136,"column":25,"nodeType":"119","endLine":136,"endColumn":37},{"ruleId":"120","severity":1,"message":"121","line":41,"column":6,"nodeType":"122","endLine":41,"endColumn":16,"suggestions":"123"},{"ruleId":"99","severity":1,"message":"124","line":2,"column":17,"nodeType":"101","messageId":"102","endLine":2,"endColumn":25},{"ruleId":"99","severity":1,"message":"125","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":19},{"ruleId":"120","severity":1,"message":"126","line":37,"column":6,"nodeType":"122","endLine":37,"endColumn":8,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"128","line":115,"column":6,"nodeType":"122","endLine":115,"endColumn":20,"suggestions":"129"},"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"'DashboardPage' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["132","133"],["134","135"],"'useChat' is defined but never used.",["136","137"],["138","139"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'startTypingMessage' and 'stopTypingMessage'. Either include them or remove the dependency array.","ArrayExpression",["140"],"'Redirect' is defined but never used.","'chatrooms' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"messageId":"143","fix":"144","desc":"145"},{"messageId":"146","fix":"147","desc":"148"},{"messageId":"143","fix":"149","desc":"145"},{"messageId":"146","fix":"150","desc":"148"},{"messageId":"143","fix":"151","desc":"145"},{"messageId":"146","fix":"152","desc":"148"},{"messageId":"143","fix":"153","desc":"145"},{"messageId":"146","fix":"154","desc":"148"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"removeEscape",{"range":"161","text":"162"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"163","text":"164"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"165","text":"162"},{"range":"166","text":"164"},{"range":"167","text":"162"},{"range":"168","text":"164"},{"range":"169","text":"162"},{"range":"170","text":"164"},"Update the dependencies array to be: [isTyping, startTypingMessage, stopTypingMessage]",{"range":"171","text":"172"},"Update the dependencies array to be: [email]",{"range":"173","text":"174"},"Update the dependencies array to be: [messages, roomId, user]",{"range":"175","text":"176"},[564,565],"",[564,564],"\\",[589,590],[589,589],[625,626],[625,625],[650,651],[650,650],[1151,1161],"[isTyping, startTypingMessage, stopTypingMessage]",[1280,1282],"[email]",[3560,3574],"[messages, roomId, user]"]